name: Django                                  # workflow name

on:
  push:                                       
    branches:                                 # similar to "only" in GitLab
      - main

jobs:
  build:
    runs-on: ubuntu-20.04                   # similar to "image" in GitLab
    steps:
      - uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'

      - run: |
          pip3 install --upgrade virtualenv
          virtualenv env
          source env/bin/activate
          pip install -r requirements.txt
          python manage.py check

  test:
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'

      - run: |
          pip3 install --upgrade virtualenv
          virtualenv env
          source env/bin/activate
          pip install -r requirements.txt
          python manage.py test taskManager
  
  container_scanning:
    runs-on: ubuntu-20.04
    needs: test
    steps:
      - name: Checkout code                  # This step checks out the source code repository so that the subsequent steps can access the code.
        uses: actions/checkout@v2

      - name: Set up Docker Buildx           # This step sets up Docker Buildx, which is an extension to Docker that provides enhanced capabilities for building and pushing Docker images. The action used here is "docker/setup-buildx-action@v1.
        uses: docker/setup-buildx-action@v1

      - name: build local container           # This is the main step responsible for building the Docker image of the Django application
        uses: docker/build-push-action@v2     # This action is used to build and push Docker images. In this case, version 2 of the action is used.
        with:                                 # This section contains the input parameters for the "docker/build-push-action" action.
          tags: django.nv:${{ github.sha }}   # This specifies the tags to be associated with the Docker image. In this case, the tag includes "django.nv" followed by the commit SHA (github.sha) of the code being built. The commit SHA is a unique identifier for the specific commit in the Git repository, allowing for version tracking of the Docker image.
          push: false                         # This indicates that the Docker image should not be pushed to any container registry. Instead, it will be kept locally.
          load: true                          # This option tells Docker to load the image into the local Docker daemon after building it. This means that the image will be available for use on the current system without the need for a registry.

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'django.nv:${{ github.sha }}'
          format: 'sarif'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'MEDIUM'
          output: 'trivy-results.sarif'
        continue-on-error: true

  integration:
    runs-on: ubuntu-20.04
    needs: container_scanning
    steps:
      - run: echo "This is an integration step"
      - run: exit 1
        continue-on-error: true

  prod:
    runs-on: ubuntu-20.04
    needs: integration
    steps:
      - run: echo "This is a deploy step."
